name: Reusable testing workflow

on:
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
      folder:
        required: true
        type: string


jobs:
  show_inputs:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo branch: ${{ inputs.branch }}
          echo folder: ${{ inputs.folder }}
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        folder: ${{ fromJSON(inputs.folder) }}
        os: [ubuntu-latest, windows-latest]
        release: [R2023b]
        include:
          - products: Simulink Simscape Simscape_Multibody
          - folder: Desalination
            products: Simulink Simscape Simscape_Multibody Simscape_Fluids
          - folder: Controls
            products: Simulink Simscape Simscape_Multibody Control_System_Toolbox Optimization_Toolbox System_Identification_Toolbox Statistics_and_Machine_Learning_Toolbox Symbolic_Math_Toolbox
          - folder: Load_Mitigating_Controls
            products: Simulink Simscape Simscape_Multibody DSP_System_Toolbox
          - folder: OWC
            products: Simulink Simscape Simscape_Multibody Control_System_Toolbox
          - folder: WECCCOMP
            products: Simulink Simscape Simscape_Multibody Control_System_Toolbox Optimization_Toolbox System_Identification_Toolbox Statistics_and_Machine_Learning_Toolbox
        exclude:
          - os: ubuntu-latest
            folder: Mooring
    name: "${{ matrix.folder }} - ${{ matrix.os }} - ${{ matrix.release }}"
    timeout-minutes: 45
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ inputs.branch }}
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Check out WEC-Sim
        uses: actions/checkout@v4
        with:
          repository: WEC-Sim/WEC-Sim
          ref: 'dev'
          path: './WEC-Sim'
      - name: Check out MoorDyn
        if: matrix.folder == 'Mooring'
        uses: actions/checkout@v4
        with:
          repository: WEC-Sim/MoorDyn
          path: './MoorDyn'
      - name: Copy MoorDyn Files
        if: matrix.folder == 'Mooring'
        run: |
            cp * ../WEC-Sim/source/functions/moorDyn
            ls ../WEC-Sim/source/functions/moorDyn
        shell: bash
        working-directory: './MoorDyn'
      - name: Install MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          products: ${{ matrix.products }}
          release: ${{ matrix.release }}
      - name: Start display server (Desalination on Linux)
        if: matrix.folder == 'Desalination' && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install xvfb
          Xvfb :99 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Install WEC-Sim, run tests and generate artifacts
        uses: matlab-actions/run-command@v2
        with:
          command: |
            addpath(genpath('WEC-Sim/source'));
            results = wecSimAppTest("${{ matrix.folder }}"),
            assertSuccess(results);
